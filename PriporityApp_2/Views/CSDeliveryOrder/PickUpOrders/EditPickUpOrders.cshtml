@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model PriorityApp.Service.Models.GeoFilterModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/NiceAdmin/_CSLayout.cshtml";
    float holdReminingQuantity = 0;

}
<style>
    table {
        border-collapse: collapse;
        border-spacing: 0;
        width: 100%;
        border: 1px solid #ddd;
    }

    th, td {
        text-align: left;
        padding: 8px;
    }

    tr:nth-child(even) {
        background-color: #f2f2f2
    }

    a.disabled {
        pointer-events: none;
    }
</style>

<script src="~/DataTable/jquery-3.5.1.js"></script>
<script src="~/DataTable/jquery.dataTables.min.js"></script>
<link rel="stylesheet" href="~/DataTable/jquery.dataTables.min.css">
<script src="/lib/jquery/dist/jquery.js"></script>


@*<link rel="stylesheet" href="~/css/newStyleSheet.css">*@



@if (Model.HoldModel != null)
{

    <script>
                    var holdReminingQuantity3 = @Model.HoldModel.ReminingQuantity;

    </script>
}

<script type="text/javascript">
    $(document).ready(function () {
        $('#SubRegionSelectedId').change(function () {
            var ddlsource = "#SubRegionSelectedId";
            var items = '';
            if ($(ddlsource).val() != -1) {
                var url = '@Url.Content("~/")' + "PriorityTool/CSDeliveryOrder/StateFilter";
                $.getJSON(url, { id: $(ddlsource).val() }, function (data) {
                    $('#StateSelectedId').empty();
                    $.each(data, function (i, state) {
                        items += "<option value='" + state.value + "'>" + state.text + "</option>";
                    });
                    $('#StateSelectedId').html(items);
                });
            }
            else
            {
                $('#StateSelectedId').html(items);
            }
        });


        $('#StateSelectedId').change(function () {
            var ddlsource = "#StateSelectedId";

            var items = '';
            if ($(ddlsource).val() != -1) {
                var url = '@Url.Content("~/")' + "PriorityTool/CSDeliveryOrder/TerritoryFilter";
                $.getJSON(url, { id: $(ddlsource).val() }, function (data) {
                    $('#TerritorySelectedId').empty();
                    $.each(data, function (i, territory) {
                        items += "<option value='" + territory.value + "'>" + territory.text + "</option>";
                    });
                    $('#TerritorySelectedId').html(items);
                });
            }
            else
            {
                $('#TerritorySelectedId').html(items);

            }

        });

        $('#TerritorySelectedId').change(function () {

            var ddlsource = "#TerritorySelectedId";
            var items = '';

            if ($(ddlsource).val() != -1) {
                var url = '@Url.Content("~/")' + "CSDeliveryOrder/ZoneFilter";
                $.getJSON(url, { id: $(ddlsource).val() }, function (data) {
                    $('#ZoneSelectedId').empty();
                    $.each(data, function (i, zone) {
                        items += "<option value='" + zone.value + "'>" + zone.text + "</option>";
                    });
                    $('#ZoneSelectedId').html(items);
                });
            }
            else
            {
                $('#ZoneSelectedId').html(items);

            }
        });

    });


    var AssignedValuesArray = [];
    var SavedValuesArray = [];
    var totalQuantity = 0;

    function QuantityValidation(orderQuantity, radioButtonListId, index, priorityQuantityId, holdReminingQuantity2, savedBefore, savedPriorityQuantity, savedPriorityId)
    {

        var tempholdReminingQuantity3 = holdReminingQuantity3;
        var insertedQuantity = priorityQuantityId.value;
        var selectedPriorityId = radioButtonListId.value;

        if (selectedPriorityId != 2) {
           // var compareResult = compareInsertedQuantityVSOrderQuantity(insertedQuantity, orderQuantity);
            var compareResult = true;
            if (compareResult == true)
            {
                if (savedBefore == true && SavedValuesArray[index] == undefined)
                {
                    if (savedPriorityId == 3)
                    {
                        holdReminingQuantity3 = holdReminingQuantity3 + savedPriorityQuantity;
                        tempholdReminingQuantity3 = tempholdReminingQuantity3 + savedPriorityQuantity;
                    }
                        SavedValuesArray[index] = 1;
                        document.getElementById("remaining").value = tempholdReminingQuantity3;
                        document.getElementById("calculatedRemainingQuantity").value = tempholdReminingQuantity3;
                        document.getElementById('test').value = tempholdReminingQuantity3;

                }

                if (selectedPriorityId != 4)
                {
                    AssignedValuesArray[index] = insertedQuantity;
                }
                else
                {
                    AssignedValuesArray[index] = 0;

                 }
                //alert(SavedValuesArray[index]);
                totalQuantity = AssignedValuesArray.reduce(function (a, b) { return parseFloat(a) + parseFloat(b); });
                var totalCheckResult = checkTotalQuantityVsHoldRemainingQuantity(tempholdReminingQuantity3, totalQuantity);
                if (totalCheckResult == false) {
                    alert("you do not have enough quantity");
                    resetIfFalse(index, priorityQuantityId, radioButtonListId, tempholdReminingQuantity3);
                }
            }
            else {
                alert("please you must insert quantity less than or equal order quantity");
                resetIfFalse(index, priorityQuantityId, radioButtonListId, holdReminingQuantity2);
            }
        }
        else {
            alert("please you must select priority");
            //resetIfFalse(priorityQuantityId, radioButtonListId);

        }

    }

    function resetIfFalse(index, priorityQuantityId, radioButtonListId, holdReminingQuantity3)
    {
        priorityQuantityId.value = 0;
        radioButtonListId.value = 2;
        AssignedValuesArray[index] = 0;
        totalQuantity = AssignedValuesArray.reduce(function (a, b) { return parseFloat(a) + parseFloat(b); });
        document.getElementById("total").value =Math.abs(totalQuantity);
        checkTotalQuantityVsHoldRemainingQuantity(holdReminingQuantity3, totalQuantity);
    }

    function compareInsertedQuantityVSOrderQuantity(insertedQuantity, orderQuantity)
    {
        if (insertedQuantity <= orderQuantity)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
        function checkTotalQuantityVsHoldRemainingQuantity(holdReminingQuantity2, totalQuantity)
        {

            holdReminingQuantity2 = holdReminingQuantity2 - totalQuantity;

            document.getElementById("remaining").value = holdReminingQuantity2;

            document.getElementById("total").value = Math.abs(totalQuantity);

            document.getElementById("calculatedRemainingQuantity").value = holdReminingQuantity2;
            document.getElementById('test').value = holdReminingQuantity2;


            if (holdReminingQuantity2 >= 0)
            {
                return true;
            }
            else
            {
                return false;
            }
    }

</script>
<style>

    table {
        margin-bottom: 20px;
    }

    .selectFilter {
        margin-left: 40px;
    }

    .searchbtn {
        margin: 20px 20px 20px 40px;
        border-radius: 10px;
        width: 400px;
    }
</style>
<script>
    $(document).ready(function () {
        var table = $('#example').DataTable({
            "scrollY": "700px",
            "scrollX": "200px",

            "paging": false
        });

        $('a.toggle-vis').on('click', function (e) {
            e.preventDefault();

            // Get the column API object
            var column = table.column($(this).attr('data-column'));

            // Toggle the visibility
            column.visible(!column.visible());
        });
    });

</script>

<form asp-controller="CSDeliveryOrder" asp-action="SearchForOrders" method="post" class="form-horizontal" role="form">
    <div class="alert-danger" asp-validation-summary="ModelOnly"></div>
    <div class="form-group">
        <div class="form-row">
            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-4 selectFilter" style="display:inline-block">
                <label class="control-label" style="display:block">Priority Date</label>
                <input type="date" id="SelectedPriorityDate" asp-for="SelectedPriorityDate" />
                <input type="hidden" asp-for="orderType" value=2 />
            </div>

            <div class="col-xs-12 col-sm-6 col-md-6 col-lg-4 selectFilter" style="display:inline-block">
                <label class="control-label">Item</label>
                <select id="ItemSelectedId" name="ItemSelectedId" asp-for="ItemSelectedId"
                        class="form-select form-select-lg mb-3"
                        asp-items="@(new SelectList(Model.Items, "Id", "Name"))"></select>
            </div>
        </div>
        <div class="form-row">

            @if (Model.SubRegions == null)
            {
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
                    <label class="control-label">SubRegion</label>
                    <select id="SubRegionSelectedId" name="SubRegionSelectedId" asp-for="SubRegionSelectedId"
                            class="form-select form-select-lg mb-3"
                            asp-items="@(new SelectList(string.Empty, "Id", "Name"))"></select>
                </div>
            }
            else
            {
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
                    <label class="control-label">SubRegion</label>
                    <select id="SubRegionSelectedId" name="SubRegionSelectedId" asp-for="SubRegionSelectedId"
                            class="form-select form-select-lg mb-3"
                            asp-items="@(new SelectList(Model.SubRegions, "Id", "Name"))"></select>
                </div>
            }
            @if (Model.States == null)
            {
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
                    <label class="control-label">State</label>
                    <select id="StateSelectedId" name="StateSelectedId" asp-for="StateSelectedId"
                            class="form-select form-select-lg mb-3"
                            asp-items="@(new SelectList(string.Empty, "Id", "Name"))"></select>
                </div>
            }
            else
            {
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
                    <label class="control-label">State</label>
                    <select id="StateSelectedId" name="StateSelectedId" asp-for="StateSelectedId"
                            class="form-select form-select-lg mb-3"
                            asp-items="@(new SelectList(Model.States, "Id", "Name"))"></select>
                </div>
            }

            @if (Model.Territories == null)
            {
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
                    <label class="control-label">Territory</label>

                    <select id="TerritorySelectedId" name="TerritorySelectedId" asp-for="TerritorySelectedId"
                            class="form-select form-select-lg mb-3"
                            asp-items="@(new SelectList(string.Empty, "Id", "Name"))"></select>
                </div>
            }
            else
            {
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
                    <label class="control-label">Territory</label>

                    <select id="TerritorySelectedId" name="TerritorySelectedId" asp-for="TerritorySelectedId"
                            class="form-select form-select-lg mb-3"
                            asp-items="@(new SelectList(Model.Territories, "Id", "Name"))"></select>
                </div>
            }


            @if (Model.Zones == null)
            {
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
                    <label class="control-label">Zone</label>
                    <select id="ZoneSelectedId" name="ZoneSelectedId" asp-for="ZoneSelectedId"
                            class="form-select form-select-lg mb-3"
                            asp-items="@(new SelectList(string.Empty, "Id", "Name"))"></select>
                </div>
            }
            else
            {
                <div class="col-xs-12 col-sm-6 col-md-6 col-lg-2 selectFilter" style="display:inline-block">
                    <label class="control-label">Zone</label>
                    <select id="ZoneSelectedId" name="ZoneSelectedId" asp-for="ZoneSelectedId"
                            class="form-select form-select-lg mb-3"
                            asp-items="@(new SelectList(Model.Zones, "Id", "Name"))"></select>
                </div>
            }
        </div>
        <input type="submit" value="Search" class="btn btn-primary btn-lg searchbtn" />

    </div>

</form>

<form asp-action="SaveOrders" class="CreateForm" asp-controller="CSDeliveryOrder" method="post">
    <table id="example" class="display table table-striped" style="text-align: center; width:100%">
        <thead class="table-dark">
            <tr>
                <th> Customer Name</th>
                <th> Item </th>
                <th> Priority</th>
                <th>Quantity</th>
                <th>Comment</th>
                <th>Truck</th>
                <th>Status</th>
                <th></th>


            </tr>
        </thead>
        <tbody>
            @if (Model.OrderModel != null)
            {
                if (Model.HoldModel != null)
                {

                    <script>
                         var holdReminingQuantity2 = @Model.HoldModel.ReminingQuantity;
                    </script>
                    holdReminingQuantity = Model.HoldModel.ReminingQuantity;
                    @for (int index = 0; index < Model.OrderModel.orders.Count; index++)
                    {
                        string radioButtonListId = "";
                        radioButtonListId = "RBLI" + index;
                        string priorityQuantityId = "";
                        priorityQuantityId = "PQ" + index;

                        <tr>
                            <td>
                                @Html.DisplayFor(model => model.OrderModel.orders[index].Customer.CustomerName)
                                <input class="form-check-input" asp-for="OrderModel.orders[index].CustomerId" type="hidden" />
                                <input class="form-check-input" asp-for="OrderModel.orders[index].Id" type="hidden" />

                                @Html.DisplayFor(model => model.OrderModel.orders[index].TerritoryId)
                                <input class="form-check-input" asp-for="OrderModel.orders[index].TerritoryId" type="hidden" />
                            </td>

                            <td>
                                @Html.DisplayFor(model => model.OrderModel.orders[index].ItemId)
                                <input class="form-check-input" asp-for="OrderModel.orders[index].ItemId" type="hidden" />
                            </td>


                            @if (Model.OrderModel.orders[index].Submitted == true)
                            {
                                @*<td style="width:200px">
                                        <div><input class="form-check-input" id=@radioButtonListId asp-for="OrderModel.orders[index].PriorityId" type="radio" value="2" disabled style="" onchange="QuantityValidation(0, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, false, 0)" /><label>No</label></div>
                                        <div> <input class="form-check-input" id=@radioButtonListId asp-for="OrderModel.orders[index].PriorityId" type="radio" value="3" disabled style="" onchange="QuantityValidation(0, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, false, 0)" /><label>Norm</label></div>
                                        <div><input class="form-check-input" id=@radioButtonListId asp-for="OrderModel.orders[index].PriorityId" type="radio" value="4" disabled style="" onchange="QuantityValidation(0, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, false, 0)" /><label>Extra</label></div>
                                    </td>*@
                                <td>
                                    <select id="@radioButtonListId" name="OrderModel.orders[@index].PriorityId" disabled asp-for="OrderModel.orders[index].PriorityId"
                                            asp-items="@(new SelectList(Model.Priorities, "Id", "Name"))" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, false, 0)"></select>
                                </td>
                                <td>
                                    <input class="form-check-input qty" asp-for="OrderModel.orders[index].PriorityQuantity" disabled type="Number" style="width:100px" />

                                </td>
                                <td>
                                    <input class="form-check-input" asp-for="OrderModel.orders[index].Comment" disabled type="text" style="width:100px" value="@Model.OrderModel.orders[index].Comment" />
                                </td>
                                <td>
                                    <input class="form-check-input" asp-for="OrderModel.orders[index].Truck" type="text" style="width:100px" disabled value="@Model.OrderModel.orders[index].Comment" />
                                </td>
                            }
                            else if (Model.OrderModel.orders[index].SavedBefore == true && Model.OrderModel.orders[index].Submitted == false)
                            {
                                @*<td style="width:200px">
                                        <div> <input id=@radioButtonListId asp-for="OrderModel.orders[index].PriorityId" type="radio" value="2" disabled style="margin-left:40px" onchange="QuantityValidation(0,@radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, true, @Model.OrderModel.orders[index].PriorityQuantity, @Model.OrderModel.orders[index].PriorityId)" /><label style="margin-left:60px">No</label></div>
                                        <div> <input id=@radioButtonListId asp-for="OrderModel.orders[index].PriorityId" type="radio" value="3" style="margin-left:40px" onchange="QuantityValidation(0,@radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, true, @Model.OrderModel.orders[index].PriorityQuantity, @Model.OrderModel.orders[index].PriorityId)" /><label style="margin-left:60px">Norm</label></div>
                                        <div> <input id=@radioButtonListId asp-for="OrderModel.orders[index].PriorityId" type="radio" value="4" style="margin-left:40px" onchange="QuantityValidation(0, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, true, @Model.OrderModel.orders[index].PriorityQuantity, @Model.OrderModel.orders[index].PriorityId)" /><label style="margin-left:60px">Extra</label></div>
                                    </td>*@
                                <td>
                                    <select id="@radioButtonListId" name="OrderModel.orders[@index].PriorityId" asp-for="OrderModel.orders[index].PriorityId"
                                            asp-items="@(new SelectList(Model.Priorities, "Id", "Name"))" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, true, @Model.OrderModel.orders[index].PriorityQuantity, @Model.OrderModel.orders[index].PriorityId)"></select>
                                </td>
                                <td>
                                    <input class="form-check-input qty" id=@priorityQuantityId asp-for="OrderModel.orders[index].PriorityQuantity" type="Number" style="width:100px" value="@Model.OrderModel.orders[index].PriorityQuantity" onchange="QuantityValidation(0,@radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, true, @Model.OrderModel.orders[index].PriorityQuantity, @Model.OrderModel.orders[index].PriorityId)" />

                                </td>
                                <td>
                                    <input class="form-check-input" asp-for="OrderModel.orders[index].Comment" type="text" style="width:100px" value="@Model.OrderModel.orders[index].Comment" />
                                </td>
                                <td>
                                    <input class="form-check-input" asp-for="OrderModel.orders[index].Truck" type="text" style="width:100px" value="@Model.OrderModel.orders[index].Comment" />
                                </td>
                            }
                            else
                            {

                                <td>
                                    <select id="@radioButtonListId" name="OrderModel.orders[@index].PriorityId" asp-for="OrderModel.orders[index].PriorityId"
                                            asp-items="@(new SelectList(Model.Priorities, "Id", "Name"))" onchange="QuantityValidation(@Model.OrderModel.orders[index].OrderQuantity, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, false, 0, 2);"></select>

                                </td>
                                <td style="width:300px">
                                    <input class="form-check-input qty" id=@priorityQuantityId asp-for="OrderModel.orders[index].PriorityQuantity" type="Number" style="width:100px" value="@Model.OrderModel.orders[index].OrderQuantity" onchange="QuantityValidation(0, @radioButtonListId, @index, @priorityQuantityId, @holdReminingQuantity, false, 0, 2)" />

                                </td>
                                <td>
                                    <input class="form-check-input" asp-for="OrderModel.orders[index].Comment" type="text" style="width:100px" value="@Model.OrderModel.orders[index].Comment" />
                                </td>
                                <td>
                                    <input class="form-check-input" asp-for="OrderModel.orders[index].Truck" type="text" style="width:100px" value="@Model.OrderModel.orders[index].Truck" />
                                </td>
                            }

                            <td>
                                @Html.DisplayFor(model => model.OrderModel.orders[index].Status)
                                <input class="form-check-input" asp-for="OrderModel.orders[index].Status" type="hidden" />
                            </td>

                            <td></td>

                            <input class="form-check-input" asp-for="OrderModel.orders[index].Submitted" type="hidden" />
                            <input class="form-check-input" asp-for="OrderModel.orders[index].SavedBefore" type="hidden" />
                            <input class="form-check-input" asp-for="HoldModel.PriorityDate" type="hidden" style="width:100px" />

                            <input class="form-check-input" asp-for="HoldModel.userId" type="hidden" style="width:100px" />
                            <input class="form-check-input" asp-for="HoldModel.PriorityDate" type="hidden" style="width:100px" />

                            <input class="form-check-input" asp-for="HoldModel.QuotaQuantity" type="hidden" style="width:100px" />
                            <input id="calculatedRemainingQuantity" class="form-check-input" asp-for="HoldModel.ReminingQuantity" type="hidden" style="width:100px" />
                            @Html.Hidden("test", Model.HoldModel.ReminingQuantity)
                            <input type="hidden" asp-for="orderType" value=2 />

                        </tr>


                        <input class="form-check-input" asp-for="HoldModel.PriorityDate" type="hidden" style="width:100px" />

                        <input class="form-check-input" asp-for="HoldModel.userId" type="hidden" style="width:100px" />

                        <input class="form-check-input" asp-for="HoldModel.QuotaQuantity" type="hidden" style="width:100px" />
                        <input id="calculatedRemainingQuantity" class="form-check-input" asp-for="HoldModel.ReminingQuantity" type="hidden" style="width:100px" />
                        @Html.Hidden("test", Model.HoldModel.ReminingQuantity)
                    }


                }
                else
                {
                    <script>

                        document.getElementById("NoQouta").hidden = false;

                    </script>
                }

            }
            else
            {
                <script>

                    document.getElementById("NOOrdersSpain").hidden = false;

                </script>
            }

            @if (Model.HoldModel != null)
            {
                <span> Total</span>
                <input id="total" type="number" value="0" disabled style="margin:10px 20px 20px 0" />
                <span>Remaining Quantity</span>
                <input id="remaining" type="number" disabled value="@Model.HoldModel.ReminingQuantity" style="margin:10px 20px 20px 0" />
            }

        </tbody>
    </table>
    <span id="NOOrdersSpain" hidden>No search result</span>
    <span id="NoQouta" hidden>there is no Qouta for selected priority date</span>


    <div class="form-group" style="margin-top:20px">
        <input type="submit" value="Save" class="btn btn-primary btn-lg searchbtn" style="margin:auto" />
    </div>
    <div class="form-group" style="margin-top:40px">
        <input type="submit" value="Submit" asp-action="SubmitOrders"  asp-controller="CSDeliveryOrder"  class="btn btn-primary btn-lg searchbtn" style="margin:auto" />
    </div>
</form>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    function showNOOrdersSpain() {
        document.getElementById("NOOrdersSpain").visiable = true;
    }
</script>
<script src="~/filter/ddtf.js"></script>
<script>
    $('#example').ddTableFilter();
</script>
<script language="javascript">
    var today = new Date();
    var dd = String(today.getDate()).padStart(2, '0');
    var mm = String(today.getMonth() + 1).padStart(2, '0');
    var yyyy = today.getFullYear();

    today = yyyy + '-' + mm + '-' + dd;
    $('#SelectedPriorityDate').attr('min', today);
</script>